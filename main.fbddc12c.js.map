{"version":3,"sources":["scripts/main.js"],"names":["BASE_URL","getRequest","url","fetch","then","response","ok","status","json","getPhonesId","result","map","phone","id","getFirstReceivedDetails","arr","Promise","race","data","getAllSuccessfulDetails","all","getThreeFastestDetails","createList","divClass","title","document","body","insertAdjacentHTML","name","join","list"],"mappings":";AAAA,aAGA,IAAMA,EAAW,mEAEXC,EAAa,WAACC,IAAAA,EAAM,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACjBC,OAAAA,MAASH,GAAAA,OAAAA,GAAWE,OAAAA,EAApB,UACJE,KAAK,SAAAC,GACA,IAACA,EAASC,GAEHD,KAAAA,GAAAA,OAAAA,EAASE,OAAlB,wBAGKF,OAAAA,EAASG,UAIhBC,EAAc,WACXR,OAAAA,IAAaG,KAAK,SAAAM,GAAUA,OAAAA,EAAOC,IAAI,SAAAC,GAASA,OAAAA,EAAMC,QAGzDC,EAA0B,SAACC,GACxBC,OAAAA,QAAQC,KAAKF,EAAIJ,IAAI,SAAAC,GAASX,OAAAA,EAAeW,IAAAA,OAAAA,OACjDR,KAAK,SAAAc,GAAQ,MAAA,CAACA,MAGbC,EAA0B,SAACJ,GACxBC,OAAAA,QAAQI,IAAIL,EAAIJ,IAAI,SAAAC,GAASX,OAAAA,EAAeW,IAAAA,OAAAA,QAG/CS,EAAyB,SAACN,GACvBC,OAAAA,QAAQI,IAAI,CACjBJ,QAAQC,KAAKF,EAAIJ,IAAI,SAAAC,GAASX,OAAAA,EAAeW,IAAAA,OAAAA,OAC7CI,QAAQC,KAAKF,EAAIJ,IAAI,SAAAC,GAASX,OAAAA,EAAeW,IAAAA,OAAAA,OAC7CI,QAAQC,KAAKF,EAAIJ,IAAI,SAAAC,GAASX,OAAAA,EAAeW,IAAAA,OAAAA,UAI3CU,EAAa,SAACC,EAAUC,EAAON,GACnCO,SAASC,KAAKC,mBAAmB,aACjBJ,qBAAAA,OAAAA,EACNC,kBAAAA,OAAAA,EAEJN,6BAAAA,OAAAA,EAAKP,IAAI,SAAAC,GACHA,MAAAA,iBAAAA,OAAAA,EAAMgB,KADE,mBAEbC,KAAK,IANZ,mCAYFpB,IACGL,KAAK,SAAA0B,GAAQX,OAAAA,EAAwBW,KACrC1B,KAAK,SAAAc,GAAQI,OAAAA,EAAW,iBAAkB,iBAAkBJ,KAE/DT,IACGL,KAAK,SAAA0B,GAAQT,OAAAA,EAAuBS,KACpC1B,KAAK,SAAAc,GAAQI,OAAAA,EAAW,mBAAoB,gBAAiBJ,KAEhET,IACGL,KAAK,SAAA0B,GAAQhB,OAAAA,EAAwBgB,KACrC1B,KAAK,SAAAc,GAAQI,OAAAA,EAAW,iBAAkB,gBAAiBJ","file":"main.fbddc12c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst getRequest = (url = '') => {\n  return fetch(`${BASE_URL}${url}.json`)\n    .then(response => {\n      if (!response.ok) {\n        // eslint-disable-next-line no-throw-literal\n        throw `${response.status} - Error from server`;\n      }\n\n      return response.json();\n    });\n};\n\nconst getPhonesId = () => {\n  return getRequest().then(result => result.map(phone => phone.id));\n};\n\nconst getFirstReceivedDetails = (arr) => {\n  return Promise.race(arr.map(phone => getRequest(`/${phone}`)))\n    .then(data => [data]);\n};\n\nconst getAllSuccessfulDetails = (arr) => {\n  return Promise.all(arr.map(phone => getRequest(`/${phone}`)));\n};\n\nconst getThreeFastestDetails = (arr) => {\n  return Promise.all([\n    Promise.race(arr.map(phone => getRequest(`/${phone}`))),\n    Promise.race(arr.map(phone => getRequest(`/${phone}`))),\n    Promise.race(arr.map(phone => getRequest(`/${phone}`))),\n  ]);\n};\n\nconst createList = (divClass, title, data) => {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <div class=\"${divClass}\">\n      <h3>${title}</h3>\n      <ul>\n      ${data.map(phone => `\n        <li>${phone.name}</li>\n      `).join('')}\n      </ul>\n    </div>\n  `);\n};\n\ngetPhonesId()\n  .then(list => getAllSuccessfulDetails(list))\n  .then(data => createList('all-successful', 'All successful', data));\n\ngetPhonesId()\n  .then(list => getThreeFastestDetails(list))\n  .then(data => createList('three-successful', 'Three Fastest', data));\n\ngetPhonesId()\n  .then(list => getFirstReceivedDetails(list))\n  .then(data => createList('first-received', 'First Fastest', data));\n"]}